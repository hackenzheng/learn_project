events {
    worker_connections  1024;
}



http{

    server {
        listen 89;
        return 400;
    }

    server {
        listen 89;
        server_name mysite.com;
        #return 301 https://$server_name$request_uri;
        rewrite ^/(.*) https://mysite.com/$1 redirect;
    }

    server{
        listen 443 default;
        ssl on;
        ssl_certificate ~/https_deploy/certificate.crt;
        ssl_certificate_key ~/https_deploy/privateKey.key;
        return 400;
        access_log ~/https_deploy/mysite.access.log;
    }

    server{
        #比起默认的80 使用了443 默认 是ssl方式  多出default之后的ssl
        listen 443;
        #开启  如果把ssl on；这行去掉，ssl写在443端口后面。这样http和https的链接都可以用
        ssl on;
        #证书(公钥.发送到客户端的)
        ssl_certificate ~/https_deploy/certificate.crt;
        #私钥,
        ssl_certificate_key ~/https_deploy/privateKey.key;
        #下面是绑定域名
        server_name mysite.com;
        # rewrite /pipeline /detail last;

        location / {
            proxy_redirect off; #禁止跳转
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #配置反向代理
            proxy_pass http://127.0.0.1:8000;
        }

        access_log ~/https_deploy/mysite.access.log;
    }

}
